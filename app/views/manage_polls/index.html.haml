:javascript
  function addOption() {
    var randomNumber = Math.floor(Math.random()*10000000);
    var optionField = "#{escape_javascript(render :partial => 'poll_option')}";

    optionField = optionField.replace("OPTION_ID", randomNumber);
    optionField = optionField.replace("OPTION_ID", randomNumber);

    return optionField;
  }

  function addOptions(){
    $(addOption()).insertBefore($('.options_content'));
  }

  function removeOption(optionId){
    $('#poll_option_'+optionId).remove();
  }

%h1
  Manage Poll
%p.description
  CRUD Poll

%ul.admin-nav
  %li.head_tag
    = link_to "Create New", admin_polls_path(:tab=>"new")
  %li.question_help
    = link_to "List", admin_polls_path


- if params[:tab].eql?('new')
  - method = :post
  - url = manage_polls_path
  - if !params[:id].nil? && !@poll.id.nil?
    - method = :put 
    - url = manage_poll_path(:id => @poll.id)
  = form_for @poll, :url => url, :html => {:class => "form", :method => method} do |form|
    = form.error_messages
    
    .field
      = form.label "Poll title *"
      = form.text_field :poll_title, :class => "text_area"

    .field
      = form.label "Poll Status"
      #{radio_button("poll", "is_active", true)} Active
      #{radio_button("poll", "is_active", false)} Suspend

    .field
      = form.label "Options"

    - if !params[:id].nil? && !@poll.id.nil?
      - @poll.poll_options.each_with_index do |option, i|
        .field{:id => "poll_option_#{i}"}
          = text_field_tag "poll[poll_options][][option_desc]", option.option_desc,:class => "text_area"
          = link_to "x", "#", :onclick => "removeOption(#{i}); return false;"
    - else
      .field 
        = text_field_tag "poll[poll_options][][option_desc]", "",:class => "text_area"
    
    .options_content
      = link_to "add options", "#", :onclick => "addOptions(); return false;"
      
    .buttons
      = form.submit "Save", :class => "save"
    
- else
  .members
    #members
      - if @polls.blank?
        %ul
          %li{:style => "padding-bottom:0px !important"}
            No Polls Yet
      - @polls.each do |poll|
        = render :partial => "poll", :object => poll
        
      = paginate @polls
